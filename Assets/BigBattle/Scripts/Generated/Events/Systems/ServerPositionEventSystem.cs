//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventSystemGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed class ServerPositionEventSystem : Entitas.ReactiveSystem<ServerEntity> {

    readonly System.Collections.Generic.List<IServerPositionListener> _listenerBuffer;

    public ServerPositionEventSystem(Contexts contexts) : base(contexts.server) {
        _listenerBuffer = new System.Collections.Generic.List<IServerPositionListener>();
    }

    protected override Entitas.ICollector<ServerEntity> GetTrigger(Entitas.IContext<ServerEntity> context) {
        return Entitas.CollectorContextExtension.CreateCollector(
            context, Entitas.TriggerOnEventMatcherExtension.Added(ServerMatcher.Position)
        );
    }

    protected override bool Filter(ServerEntity entity) {
        return entity.hasPosition && entity.hasServerPositionListener;
    }

    protected override void Execute(System.Collections.Generic.List<ServerEntity> entities) {
        foreach (var e in entities) {
            var component = e.position;
            _listenerBuffer.Clear();
            _listenerBuffer.AddRange(e.serverPositionListener.value);
            foreach (var listener in _listenerBuffer) {
                listener.OnPosition(e, component.value);
            }
        }
    }
}
