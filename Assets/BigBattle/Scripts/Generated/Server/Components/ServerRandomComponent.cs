//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServerContext {

    public ServerEntity randomEntity { get { return GetGroup(ServerMatcher.Random).GetSingleEntity(); } }
    public BigBattle.RandomComponent random { get { return randomEntity.random; } }
    public bool hasRandom { get { return randomEntity != null; } }

    public ServerEntity SetRandom(BigBattle.Random newValue) {
        if (hasRandom) {
            throw new Entitas.EntitasException("Could not set Random!\n" + this + " already has an entity with BigBattle.RandomComponent!",
                "You should check if the context already has a randomEntity before setting it or use context.ReplaceRandom().");
        }
        var entity = CreateEntity();
        entity.AddRandom(newValue);
        return entity;
    }

    public void ReplaceRandom(BigBattle.Random newValue) {
        var entity = randomEntity;
        if (entity == null) {
            entity = SetRandom(newValue);
        } else {
            entity.ReplaceRandom(newValue);
        }
    }

    public void RemoveRandom() {
        randomEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServerEntity {

    public BigBattle.RandomComponent random { get { return (BigBattle.RandomComponent)GetComponent(ServerComponentsLookup.Random); } }
    public bool hasRandom { get { return HasComponent(ServerComponentsLookup.Random); } }

    public void AddRandom(BigBattle.Random newValue) {
        var index = ServerComponentsLookup.Random;
        var component = (BigBattle.RandomComponent)CreateComponent(index, typeof(BigBattle.RandomComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceRandom(BigBattle.Random newValue) {
        var index = ServerComponentsLookup.Random;
        var component = (BigBattle.RandomComponent)CreateComponent(index, typeof(BigBattle.RandomComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveRandom() {
        RemoveComponent(ServerComponentsLookup.Random);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiInterfaceGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServerEntity : IRandomEntity { }

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ServerMatcher {

    static Entitas.IMatcher<ServerEntity> _matcherRandom;

    public static Entitas.IMatcher<ServerEntity> Random {
        get {
            if (_matcherRandom == null) {
                var matcher = (Entitas.Matcher<ServerEntity>)Entitas.Matcher<ServerEntity>.AllOf(ServerComponentsLookup.Random);
                matcher.componentNames = ServerComponentsLookup.componentNames;
                _matcherRandom = matcher;
            }

            return _matcherRandom;
        }
    }
}
